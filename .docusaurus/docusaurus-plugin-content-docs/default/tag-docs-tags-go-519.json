{
  "label": "go",
  "permalink": "/docs/tags/go",
  "allTagsPath": "/docs/tags",
  "count": 6,
  "items": [
    {
      "id": "skill/go/try-gin-framework",
      "title": "Gin框架初体验",
      "description": "安装 Gin",
      "permalink": "/docs/try-gin-framework"
    },
    {
      "id": "skill/go/go-concurrent",
      "title": "Go并发",
      "description": "Go 语言的并发是基于 goroutine 的，goroutine 类似于线程，但并非线程。可以将 goroutine 理解为一种虚拟线程。Go 语言运行时会参与调度 goroutine，并将 goroutine 合理地分配到每个 CPU 中，最大限度地使用 CPU 性能。开启一个 goroutine 的消耗非常小（大约 2KB 的内存），你可以轻松创建数百万个goroutine。",
      "permalink": "/docs/go-concurrent"
    },
    {
      "id": "skill/go/go-call-js",
      "title": "Go调用js代码",
      "description": "运行 js 代码",
      "permalink": "/docs/go-call-js"
    },
    {
      "id": "skill/go/go-send-http-request",
      "title": "Go发送http请求",
      "description": "Get 请求",
      "permalink": "/docs/go-send-http-request"
    },
    {
      "id": "skill/go/go-environment-install",
      "title": "Go环境安装",
      "description": "安装 Go",
      "permalink": "/docs/go-environment-install"
    },
    {
      "id": "skill/go/go-json-usage",
      "title": "Go语言之json使用",
      "description": "Go 语言中，官方提供了一个专门的包 encoding/json",
      "permalink": "/docs/go-json-usage"
    }
  ]
}